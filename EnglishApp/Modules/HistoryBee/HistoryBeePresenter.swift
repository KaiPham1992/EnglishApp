//
//  HistoryBeePresenter.swift
//  EnglishApp
//
//  Created Kai Pham on 5/19/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class HistoryBeePresenter: HistoryBeePresenterProtocol, HistoryBeeInteractorOutputProtocol {

    weak private var view: HistoryBeeViewProtocol?
    var interactor: HistoryBeeInteractorInputProtocol?
    private let router: HistoryBeeWireframeProtocol

    var canLoadMore: Bool = false
    var listHistory: [LogEntity] = [LogEntity]()
    
    init(interface: HistoryBeeViewProtocol, interactor: HistoryBeeInteractorInputProtocol?, router: HistoryBeeWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func numOfRow() -> Int{
        return self.listHistory.count 
    }
    
    func getWalletLog(wallet_type: Int) {
        canLoadMore = false
        ProgressView.shared.show()
        Provider.shared.walletLogAPIService.getWalletLog(offset: listHistory.count, wallet_type: wallet_type, success: { (listWalletLog) in
            ProgressView.shared.hide()
            
            guard let _listWalletLog = listWalletLog?.logs, let _totalWallet = listWalletLog?.total_wallets else {return}
            if _listWalletLog.count == limit {
                self.canLoadMore = true
            }
            self.listHistory.append(contentsOf: _listWalletLog)
            self.view?.didGetWalletLog(listWalletLog: _listWalletLog, totalWallet: _totalWallet)
        }) { (error) in
            ProgressView.shared.hide()
            guard let error = error else {return}
            self.view?.didGetWalletLog(error: error)
        }
    }

}
