//
//  LessonViewController.swift
//  EnglishApp
//
//  Created vinova on 5/17/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import XLPagerTabStrip

enum TheoryType : Int {
    case lesson = 1
    case recipe = 2
}

class LessonViewController: BaseViewController {

    @IBOutlet weak var tbvLesson: UITableView!
    var presenter: LessonPresenterProtocol?
    var type: TheoryType = .lesson
    var offset = 0
    
    override func viewDidLoad() {
        super.viewDidLoad()
       tbvLesson.dataSource = self
        tbvLesson.delegate = self
        tbvLesson.registerXibFile(CellLesson.self)
        tbvLesson.contentInset = UIEdgeInsets(top: 0, left: 0, bottom: 100, right: 0)
        self.presenter?.getLessonRecipe(type: self.type.rawValue, offset: self.offset)
    }

}

extension LessonViewController : LessonViewProtocol{
    func reloadView(){
        tbvLesson.reloadData()
    }
}

extension LessonViewController : UITableViewDataSource{
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        let row = self.presenter?.lessonEntity?.categories?.count ?? 0
        if row == 0 {
            showNoData()
        } else {
            hideNoData()
        }
        return row
    }
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeue(CellLesson.self, for: indexPath)
        if let dataCell = self.presenter?.lessonEntity?.categories?[indexPath.row] {
            cell.setupDataCell(dataCell: dataCell)
        }
        return cell
    }
    
    func tableView(_ tableView: UITableView, willDisplay cell: UITableViewCell, forRowAt indexPath: IndexPath) {
        let row = self.presenter?.lessonEntity?.categories?.count ?? 0
        if indexPath.row == row - 1 {
            self.offset += 1
            self.presenter?.getLessonRecipe(type: self.type.rawValue, offset: self.offset)
        }
    }
}

extension LessonViewController : UITableViewDelegate {
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        if let id = self.presenter?.lessonEntity?.categories?[indexPath.row]._id {
            self.presenter?.gotoListLesson(id: id)
        }
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 124
    }
}

extension LessonViewController: IndicatorInfoProvider{
    func indicatorInfo(for pagerTabStripController: PagerTabStripViewController) -> IndicatorInfo {
        if type == .lesson {
            return IndicatorInfo(title: LocalizableKey.lesson.showLanguage)
        }
        return IndicatorInfo(title: LocalizableKey.recipe.showLanguage)
    }
}

