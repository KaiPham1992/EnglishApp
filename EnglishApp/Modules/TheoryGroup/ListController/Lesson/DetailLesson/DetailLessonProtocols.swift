//
//  DetailLessonProtocols.swift
//  EnglishApp
//
//  Created vinova on 5/18/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation
import UIKit

//MARK: Wireframe -
protocol DetailLessonWireframeProtocol: class {

}
//MARK: Presenter -
protocol DetailLessonPresenterProtocol: class {

    var interactor: DetailLessonInteractorInputProtocol? { get set }
    var vocabulary : WordExplainEntity? {get set}
    var lessonDetail: LessonCatelogyDetail? {get set}
    func getLessonDetail(lesson_id: Int)
    func likeLesson(idLesson: Int, idWord: Int?, isFavorite: Int)
    func getViewVocabulary(wordId: Int)
    func searchVocabulary(word: String,position: CGPoint)
}

//MARK: Interactor -
protocol DetailLessonInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func getLessonDetailSuccessed(lessonDetail: LessonCatelogyDetail)
    func getViewVocabularySuccessed(vocabulary: WordExplainEntity)
    func searchVocabularySuccessed(wordEntity: WordExplainEntity,position: CGPoint)
}

protocol DetailLessonInteractorInputProtocol: class {

    var presenter: DetailLessonInteractorOutputProtocol?  { get set }
    func getLessonDetail(lesson_id: Int)
    func likeLesson(idLesson: Int, idWord: Int?, isFavorite: Int)
    func getViewVocabulary(wordId: Int)
    func searchVocabulary(word: String,position: CGPoint)

    /* Presenter -> Interactor */
}

//MARK: View -
protocol DetailLessonViewProtocol: class {

    var presenter: DetailLessonPresenterProtocol?  { get set }
    func reloadView()
    func searchVocabularySuccessed(wordEntity: WordExplainEntity,position: CGPoint)
    /* Presenter -> ViewController */
}
