//
//  VocabularyProtocols.swift
//  EnglishApp
//
//  Created Steve on 7/28/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//MARK: Wireframe -
protocol VocabularyWireframeProtocol: class {

}
//MARK: Presenter -
protocol VocabularyPresenterProtocol: class {

    var interactor: VocabularyInteractorInputProtocol? { get set }
    func getListLikeVocab(offset: Int)
    func deleteVocab(listId: [Int])
}

//MARK: Interactor -
protocol VocabularyInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func getListLikeVocabSuccessed(response: WordLikeResponse)
    func deleteVocabSuccessed()
}

protocol VocabularyInteractorInputProtocol: class {

    var presenter: VocabularyInteractorOutputProtocol?  { get set }
    func getListLikeVocab(offset: Int)
    func deleteVocab(listId: [Int])
    
    /* Presenter -> Interactor */
}

//MARK: View -
protocol VocabularyViewProtocol: class {

    var presenter: VocabularyPresenterProtocol?  { get set }
    func reloadView(listResponse: [WordLikeEntity])
    func deleteVocabSuccessed()
    /* Presenter -> ViewController */
}
