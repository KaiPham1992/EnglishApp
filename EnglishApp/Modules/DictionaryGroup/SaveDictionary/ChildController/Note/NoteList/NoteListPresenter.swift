//
//  NoteListPresenter.swift
//  EnglishApp
//
//  Created Steve on 7/25/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class NoteListPresenter: NoteListPresenterProtocol, NoteListInteractorOutputProtocol {

    weak private var view: NoteListViewProtocol?
    var interactor: NoteListInteractorInputProtocol?
    private let router: NoteListWireframeProtocol
    

    init(interface: NoteListViewProtocol, interactor: NoteListInteractorInputProtocol?, router: NoteListWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func getListNote(offset: Int) {
        self.interactor?.getListNote(offset: offset)
    }
    
    func confirmDelete(listId: [Int]) {
        self.interactor?.deleteNote(id: listId)
    }

    func gotoNote(idNote: String) {
        self.router.gotoNote(idNote: idNote)
    }
    
    func gotoAddNote() {
        self.router.gotoAddNote()
    }

    
    func getListNoteSuccessed(listNote: NoteListRespone) {
        self.view?.reloadView(listData: listNote.notes)
    }
    
    func deleteNoteSuccessed() {
        self.view?.reloadViewAfterDelete()
    }
}
