//
//  NoteListProtocols.swift
//  EnglishApp
//
//  Created Steve on 7/25/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//MARK: Wireframe -
protocol NoteListWireframeProtocol: class {

    func gotoNote(idNote: String)
    func gotoAddNote()
    func gotoDetailVocabulary()
    func gotoDetailGrammar()
}
//MARK: Presenter -
protocol NoteListPresenterProtocol: class {

    var interactor: NoteListInteractorInputProtocol? { get set }
    
    func gotoNote(idNote: String)
    func gotoAddNote()
    func gotoDetailVocabulary()
    func gotoDetailGrammar()
    func getListNote(offset: Int,replaceData: Bool)
    func getItemIndexPath(indexPath: IndexPath) -> NoteRespone?
    func getNumberRow() -> Int
    func changeStatusNote(indexPath: IndexPath)
    func deleteNote()
    func cancelDelete()
    func checkLoadMore() -> Bool
    func getIdNote(indexPath: IndexPath) -> String?
}

//MARK: Interactor -
protocol NoteListInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    
    func getListNoteSuccessed(listNote: [NoteRespone])
    func deleteNoteSuccessed()
}

protocol NoteListInteractorInputProtocol: class {

    var presenter: NoteListInteractorOutputProtocol?  { get set }
    
    func getListNote(offset: Int)
    func deleteNote(id: [Int])


    /* Presenter -> Interactor */
}

//MARK: View -
protocol NoteListViewProtocol: class {

    var presenter: NoteListPresenterProtocol?  { get set }
    
    func reloadView()
    func reloadViewAfterDelete()

    /* Presenter -> ViewController */
}
