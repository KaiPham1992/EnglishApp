//
//  SeeNoteProtocols.swift
//  EnglishApp
//
//  Created vinova on 5/17/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//MARK: Wireframe -
protocol SeeNoteWireframeProtocol: class {

}
//MARK: Presenter -
protocol SeeNotePresenterProtocol: class {

    var interactor: SeeNoteInteractorInputProtocol? { get set }
    func getViewNote(idNote: String)
    func getTitleNote() -> String?
    func getDescriptionNote() -> String?
    func getIdNote() -> String?
    func editNote(idNote: String, description: String)
}

//MARK: Interactor -
protocol SeeNoteInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func getViewNoteSuccessed(respone: NoteDetailEntity)
    func editNoteSuccessed()
}

protocol SeeNoteInteractorInputProtocol: class {

    var presenter: SeeNoteInteractorOutputProtocol?  { get set }
    func getViewNote(idNote: String)
    func editNote(idNote: String, description: String)

    /* Presenter -> Interactor */
}

//MARK: View -
protocol SeeNoteViewProtocol: class {

    var presenter: SeeNotePresenterProtocol?  { get set }
    func reloadView()
    func editNoteSuccessed()

    /* Presenter -> ViewController */
}
