//
//  GrammarProtocols.swift
//  EnglishApp
//
//  Created vinova on 5/16/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//MARK: Wireframe -
protocol GrammarWireframeProtocol: class {
    
}
//MARK: Presenter -
protocol GrammarPresenterProtocol: class {

    var interactor: GrammarInteractorInputProtocol? { get set }
    var grammarsResponse : GrammarsResponse? {get set}
    func getListGrammar(offset: Int,replaceData: Bool)
    func deleteGrammar()
    func cancelDelete()
    func confirmDelete()
}

//MARK: Interactor -
protocol GrammarInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func getListGrammarSuccessed(respone: GrammarsResponse)
    func deleteGrammarSuccessed()
}

protocol GrammarInteractorInputProtocol: class {

    var presenter: GrammarInteractorOutputProtocol?  { get set }
    
    func getListGrammar(offset: Int)
    func deleteGrammar(likeList: [Int])
    
    /* Presenter -> Interactor */
}

//MARK: View -
protocol GrammarViewProtocol: class {

    var presenter: GrammarPresenterProtocol?  { get set }
    func reloadView()
    func reloadViewAfterDeleted()
    func notifyDelete()
    

    /* Presenter -> ViewController */
}
