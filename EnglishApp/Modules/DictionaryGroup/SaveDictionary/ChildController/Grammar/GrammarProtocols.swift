//
//  GrammarProtocols.swift
//  EnglishApp
//
//  Created vinova on 5/16/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//MARK: Wireframe -
protocol GrammarWireframeProtocol: class {
    func gotoNote()
    func gotoAddNote()
    func gotoDetailVocabulary()
    func gotoDetailGrammar()
}
//MARK: Presenter -
protocol GrammarPresenterProtocol: class {

    var interactor: GrammarInteractorInputProtocol? { get set }
    func gotoNote()
    func gotoAddNote()
    func gotoDetailVocabulary()
    func gotoDetailGrammar()
    func getListNote(offset: Int)
    func getItemIndexPath(indexPath: IndexPath) -> NoteRespone?
    func getNumberRow() -> Int
    func changeStatusNote(indexPath: IndexPath)
    func deleteNote()
    func cancelDelete()
}

//MARK: Interactor -
protocol GrammarInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func getListNoteSuccessed(listNote: [NoteRespone])
    func deleteNoteSuccessed()
}

protocol GrammarInteractorInputProtocol: class {

    var presenter: GrammarInteractorOutputProtocol?  { get set }
    func getListNote(offset: Int)
    func deleteNote(id: [Int])

    /* Presenter -> Interactor */
}

//MARK: View -
protocol GrammarViewProtocol: class {

    var presenter: GrammarPresenterProtocol?  { get set }
    
    func reloadView()
    func reloadViewAfterDelete()

    /* Presenter -> ViewController */
}
