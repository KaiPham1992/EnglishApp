//
//  GrammarViewController.swift
//  EnglishApp
//
//  Created vinova on 5/16/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import XLPagerTabStrip

enum TypeSave{
    case grammar
    case vocabulary
    case note
}

class GrammarViewController: UIViewController {

    @IBAction func addNote(_ sender: Any) {
        self.presenter?.gotoAddNote()
    }
    @IBOutlet weak var heightButtonAddNote: NSLayoutConstraint!
    @IBOutlet weak var tbvGrammar: UITableView!
    var presenter: GrammarPresenterProtocol?
    var type : TypeSave = .grammar
    var offset = 0

	override func viewDidLoad() {
        super.viewDidLoad()
        tbvGrammar.registerXibFile(CellGrammar.self)
        tbvGrammar.dataSource = self
        tbvGrammar.delegate = self
        
        if type == .grammar {
            heightButtonAddNote.constant = 0
        }
        
        if type == .vocabulary {
            heightButtonAddNote.constant = 0
        }
        
        if type == .note {
            heightButtonAddNote.constant = 52
            self.presenter?.getListNote(offset: self.offset)
        }
        
       
    }
}
extension GrammarViewController : GrammarViewProtocol {
    func reloadView() {
        tbvGrammar.reloadData()
    }
}

extension GrammarViewController : UITableViewDataSource{
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.presenter?.getNumberRow() ?? 0
    }
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeue(CellGrammar.self, for: indexPath)
        if let data = self.presenter?.getItemIndexPath(indexPath: indexPath) {
            cell.setupTitle(title: data.name&)
        }
        return cell
    }
    
    func tableView(_ tableView: UITableView, willDisplay cell: UITableViewCell, forRowAt indexPath: IndexPath) {
        let row = self.presenter?.getNumberRow() ?? 0
        if indexPath.row == row - 1 {
            self.offset += 1
            self.presenter?.getListNote(offset: self.offset)
        }
    }
}
extension GrammarViewController: UITableViewDelegate{
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 50
    }
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        if type == .note {
            self.presenter?.gotoNote()
        }
        if type == .vocabulary{
            self.presenter?.gotoDetailVocabulary()
        }
        if type == .grammar {
            self.presenter?.gotoDetailGrammar()
        }
    }
}
extension GrammarViewController: IndicatorInfoProvider{
    func indicatorInfo(for pagerTabStripController: PagerTabStripViewController) -> IndicatorInfo {
        if type == .grammar {
            return IndicatorInfo(title: LocalizableKey.grammar.showLanguage)
        }
        if type == .note{
            return IndicatorInfo(title: LocalizableKey.note.showLanguage)
        }
        return IndicatorInfo(title: LocalizableKey.vocabulary.showLanguage)
    }
}
