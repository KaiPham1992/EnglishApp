//
//  CreateExerciseProtocols.swift
//  EnglishApp
//
//  Created vinova on 5/22/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//MARK: Wireframe -
protocol CreateExerciseWireframeProtocol: class {
    func gotoChoiceExercise()
    func gotoExercise()
    func gotoExercise(viewExerciseEntity: ViewExerciseEntity)
}
//MARK: Presenter -
protocol CreateExercisePresenterProtocol: class {

    var interactor: CreateExerciseInteractorInputProtocol? { get set }
    func getNumberRow() -> Int
    func getItemIndexPath(indexPath : IndexPath)->String
    func gotoChoiceExercise()
    func gotoExercise()
    func getListCatelogy()
    func getCateloriesParam() -> [CategoryParam]
    func changeLevelParam(indexPath: IndexPath,level: Int)
    func changeNumberQuestion(indexPath: IndexPath,number: Int)
    func gotoCreateExercise(param: CreateExerciseParam)
}

//MARK: Interactor -
protocol CreateExerciseInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func getListCatelogySuccessed(respone: [SearchEntity])
    func createExerciseSuccessed(respone: ViewExerciseEntity)
}

protocol CreateExerciseInteractorInputProtocol: class {

    var presenter: CreateExerciseInteractorOutputProtocol?  { get set }
    func getListCatelogy()
    func gotoCreateExercise(param: CreateExerciseParam)
    
    /* Presenter -> Interactor */
}

//MARK: View -
protocol CreateExerciseViewProtocol: class {

    var presenter: CreateExercisePresenterProtocol?  { get set }
    func reloadView()

    /* Presenter -> ViewController */
}
