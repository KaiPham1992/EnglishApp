//
//  AssignExerciseViewController.swift
//  EnglishApp
//
//  Created Steve on 7/18/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class AssignExerciseViewController: ListManagerVC {

	var presenter: AssignExercisePresenterProtocol?
    
    override func setUpViews() {
        showButtonBack = true
        customTitle = LocalizableKey.assign_exercise.showLanguage
        super.setUpViews()
    }
    
    override func callAPI() {
        super.callAPI()
        self.presenter?.getListAssignExercise(offset: self.offset)
    }
    override func registerTableView() {
        super.registerTableView()
        self.tableView.registerXibFile(CellAssignExercise.self)
    }
    
    override func cellForRowListManager(item: Any, _ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let data = item as! ExerciseEntity
        let cell = tableView.dequeue(CellAssignExercise.self, for: indexPath)
        cell.indexPath = indexPath
        cell.setupCell(dataCell: data)
        return cell
    }
    
    override func didSelectTableView(item: Any, indexPath: IndexPath) {
        let data = item as! ExerciseEntity
        let vc = NameExerciseRouter.createModule(id: data._id&, type: .assignExercise)
        self.push(controller: vc)
    }
}

extension AssignExerciseViewController : AssignExerciseViewProtocol{
    func reloadView(listData: [ExerciseEntity]) {
        initLoadData(data: listData)
    }
}
