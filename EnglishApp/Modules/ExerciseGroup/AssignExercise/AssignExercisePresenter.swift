//
//  AssignExercisePresenter.swift
//  EnglishApp
//
//  Created Steve on 7/18/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class AssignExercisePresenter: AssignExercisePresenterProtocol, AssignExerciseInteractorOutputProtocol {

    weak private var view: AssignExerciseViewProtocol?
    var interactor: AssignExerciseInteractorInputProtocol?
    private let router: AssignExerciseWireframeProtocol
    var listAssignExercise: ExerciseChoiceEntity?
    var isLoadMore = true

    init(interface: AssignExerciseViewProtocol, interactor: AssignExerciseInteractorInputProtocol?, router: AssignExerciseWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func getListAssignExercise(offset: Int) {
        if isLoadMore {
            self.interactor?.getListAssignExercise(offset: offset)
        }
    }
    
    func getListAssignExerciseSuccessed(respone: ExerciseChoiceEntity) {
        if respone.exercises.count < 25 {
            isLoadMore = false
        }
        if listAssignExercise == nil {
            self.listAssignExercise = respone
        } else {
            self.listAssignExercise?.exercises += respone.exercises
        }
        self.view?.reloadView()
    }

}
