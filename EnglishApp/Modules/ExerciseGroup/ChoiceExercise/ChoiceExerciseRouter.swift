//
//  ChoiceExerciseRouter.swift
//  EnglishApp
//
//  Created vinova on 5/22/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class ChoiceExerciseRouter: ChoiceExerciseWireframeProtocol {

    weak var viewController: UIViewController?

    static func createModule() -> UIViewController {
        // Change to get view from storyboard if not using progammatic UI
        let view = ChoiceExerciseViewController.initFromNib()
        let interactor = ChoiceExerciseInteractor()
        let router = ChoiceExerciseRouter()
        let presenter = ChoiceExercisePresenter(interface: view, interactor: interactor, router: router)

        view.presenter = presenter
        interactor.presenter = presenter
        router.viewController = view

        return view
    }
    
    static func createModule(type: Int = 0,categoryId: String) -> ChoiceExerciseViewController {
        // Change to get view from storyboard if not using progammatic UI
        let view = ChoiceExerciseViewController(nibName: nil, bundle: nil)
        view.type = type
        view.categoryId = categoryId
        let interactor = ChoiceExerciseInteractor()
        let router = ChoiceExerciseRouter()
        let presenter = ChoiceExercisePresenter(interface: view, interactor: interactor, router: router)
        
        view.presenter = presenter
        interactor.presenter = presenter
        router.viewController = view
        
        return view
    }
    
    static func createModule(type: Int = 0,categoryId: String,studyPackId: Int) -> ChoiceExerciseViewController {
        // Change to get view from storyboard if not using progammatic UI
        let view = ChoiceExerciseViewController(nibName: nil, bundle: nil)
        view.type = type
        view.categoryId = categoryId
        view.studyPackId = studyPackId
        let interactor = ChoiceExerciseInteractor()
        let router = ChoiceExerciseRouter()
        let presenter = ChoiceExercisePresenter(interface: view, interactor: interactor, router: router)
        
        view.presenter = presenter
        interactor.presenter = presenter
        router.viewController = view
        
        return view
    }
    
    func gotoExercise(id: String) {
        let vc = NameExerciseRouter.createModule(id: id, type: .levelExercise)
        self.viewController?.push(controller: vc)
    }
}
