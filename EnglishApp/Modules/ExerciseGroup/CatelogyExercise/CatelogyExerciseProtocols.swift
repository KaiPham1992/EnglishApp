//
//  CatelogyExerciseProtocols.swift
//  EnglishApp
//
//  Created Steve on 7/18/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//MARK: Wireframe -
protocol CatelogyExerciseWireframeProtocol: class {
    func gotoChoiceExercise(type: Int, id: String)
}
//MARK: Presenter -
protocol CatelogyExercisePresenterProtocol: class {

    var interactor: CatelogyExerciseInteractorInputProtocol? { get set }
    
    var catelogy: CatelogyEntity? {get set}
    
    func getListCatelogy()
    func gotoChoiceExercise(type: Int, id: String)
}

//MARK: Interactor -
protocol CatelogyExerciseInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func getListCatelogySuccessed(respone: CatelogyEntity)
}

protocol CatelogyExerciseInteractorInputProtocol: class {

    var presenter: CatelogyExerciseInteractorOutputProtocol?  { get set }
    func getListCatelogy()

    /* Presenter -> Interactor */
}

//MARK: View -
protocol CatelogyExerciseViewProtocol: class {

    var presenter: CatelogyExercisePresenterProtocol?  { get set }
    func reloadView()

    /* Presenter -> ViewController */
}
