//
//  CatelogyExerciseRouter.swift
//  EnglishApp
//
//  Created Steve on 7/18/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class CatelogyExerciseRouter: CatelogyExerciseWireframeProtocol {

    weak var viewController: UIViewController?

    static func createModule() -> UIViewController {
        // Change to get view from storyboard if not using progammatic UI
        let view = CatelogyExerciseViewController(nibName: nil, bundle: nil)
        let interactor = CatelogyExerciseInteractor()
        let router = CatelogyExerciseRouter()
        let presenter = CatelogyExercisePresenter(interface: view, interactor: interactor, router: router)

        view.presenter = presenter
        interactor.presenter = presenter
        router.viewController = view

        return view
    }
    
    static func createModule(typeTest: Int) -> UIViewController {
        // Change to get view from storyboard if not using progammatic UI
        let view = CatelogyExerciseViewController(nibName: nil, bundle: nil)
        view.typeTest = typeTest
        let interactor = CatelogyExerciseInteractor()
        let router = CatelogyExerciseRouter()
        let presenter = CatelogyExercisePresenter(interface: view, interactor: interactor, router: router)
        
        view.presenter = presenter
        interactor.presenter = presenter
        router.viewController = view
        
        return view
    }
    
    func gotoChoiceExercise(type: Int, id: String) {
        let vc = ChoiceExerciseRouter.createModule(type: type, id: id)
        self.viewController?.push(controller: vc)
    }
}
