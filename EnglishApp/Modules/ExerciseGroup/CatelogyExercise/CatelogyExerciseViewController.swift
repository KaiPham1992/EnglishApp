//
//  CatelogyExerciseViewController.swift
//  EnglishApp
//
//  Created Steve on 7/18/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class CatelogyExerciseViewController: BaseViewController {

	var presenter: CatelogyExercisePresenterProtocol?

    @IBOutlet weak var tbvLevelExercise: UITableView!
    var offset: Int = 0
    var typeTest = 0
    var studyPackId : Int = 0
    
    override func setUpViews() {
        super.setUpViews()
        tbvLevelExercise.registerXibFile(CellLevelExercise.self)
        tbvLevelExercise.dataSource = self
        tbvLevelExercise.delegate = self
        self.presenter?.getListCatelogy()
        
    }
    override func setUpNavigation() {
        super.setUpNavigation()
        self.tabBarController?.tabBar.isHidden = true
        addBackToNavigation()
        if typeTest == TypeExercise.level.rawValue {
            setTitleNavigation(title: LocalizableKey.level_exercise.showLanguage)
        }
        
        if typeTest == TypeExercise.practice.rawValue {
            setTitleNavigation(title: LocalizableKey.try_hard.showLanguage)
        }
    }
    
}

extension CatelogyExerciseViewController : UITableViewDataSource{
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        let row = self.presenter?.catelogy?.categories?.count ?? 0
        if row == 0 {
            showNoData()
        } else {
            hideNoData()
        }
        return row
    }
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeue(CellLevelExercise.self, for: indexPath)
        if let dataCell = self.presenter?.catelogy?.categories?[indexPath.row] {
            cell.lblNameExercise.text = dataCell.name&
        }
        
        return cell
    }
}
extension CatelogyExerciseViewController : UITableViewDelegate{
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let id = self.presenter?.catelogy?.categories?[indexPath.row]._id ?? "0"
        self.presenter?.gotoChoiceExercise(type: typeTest, categoryId: id,studyPackId: self.studyPackId)
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return UITableView.automaticDimension
    }
    func tableView(_ tableView: UITableView, estimatedHeightForRowAt indexPath: IndexPath) -> CGFloat {
        return 60
    }
}


extension CatelogyExerciseViewController: CatelogyExerciseViewProtocol {
    func reloadView() {
        tbvLevelExercise.reloadData()
    }
}
