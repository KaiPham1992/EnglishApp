//
//  TaskDateViewController.swift
//  EnglishApp
//
//  Created vinova on 6/3/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import Popover

class TaskDateViewController: BaseViewController, TaskDateViewProtocol {

    var presenter: TaskDatePresenterProtocol?
    
    @IBOutlet weak var btnRespondQuestion: UIButton!
    @IBOutlet weak var btnSeeExplain: UIButton!
    @IBOutlet weak var lblIndexQuestion: UILabel!
    @IBOutlet weak var clvQuestion: UICollectionView!
    var currentIndex = 0
	

    @IBAction func seeExplain(_ sender: Any) {
        self.presenter?.gotoExplain()
    }
    @IBAction func reportQuestion(_ sender: Any) {
        PopUpHelper.shared.showReportQuestion(cancel: {
            
        }) {
            
        }
    }
    
    override func setUpViews() {
        super.setUpViews()
        btnSeeExplain.setTitle(LocalizableKey.see_explain.showLanguage, for: .normal)
        btnRespondQuestion.setTitle(LocalizableKey.respond_question.showLanguage, for: .normal)
        clvQuestion.registerXibCell(CellExercise.self)
        clvQuestion.delegate = self
        clvQuestion.dataSource = self
        self.tabBarController?.tabBar.isHidden = true
        self.tabBarController?.tabBar.isTranslucent = true
    }
    
    override func setUpNavigation() {
        super.setUpNavigation()
        setTitleNavigation(title: LocalizableKey.task_every_date.showLanguage)
        addBackToNavigation()
    }

}

extension TaskDateViewController : UICollectionViewDelegateFlowLayout{
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumLineSpacingForSectionAt section: Int) -> CGFloat {
        return 0
    }
    
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        return CGSize(width: self.clvQuestion.frame.width, height: self.clvQuestion.frame.height)
    }
    
    func scrollViewWillEndDragging(_ scrollView: UIScrollView, withVelocity velocity: CGPoint, targetContentOffset: UnsafeMutablePointer<CGPoint>) {
//        let index = Int(targetContentOffset.pointee.x) / Int(scrollView.frame.width)
//        lblIndexQuestion.text = "\(index + 1)/40"
    }
}
extension TaskDateViewController: UICollectionViewDataSource{
    func numberOfSections(in collectionView: UICollectionView) -> Int {
        return 1
    }
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return 6
    }
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueCell(CellExercise.self, indexPath: indexPath)
        cell.isExercise = false
        cell.delegate = self
        return cell
    }
}

extension TaskDateViewController : CellExerciseDelegate{
    func showMoreResulr(result: String) {
        PopUpHelper.shared.showMorePopUp(content: result)
    }
    
    func showMoreQuestion(attributed: NSMutableAttributedString) {
        PopUpHelper.shared.showMorePopUpAttributed(attributed: attributed) { (text) in
//            self.presenter?.gotoDetailVocabulary()
        }
    }
    func showDetailVocubulary(text: String) {
//        self.presenter?.gotoDetailVocabulary()
    }
}
