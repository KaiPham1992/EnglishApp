//
//  HistoryExercisePresenter.swift
//  EnglishApp
//
//  Created vinova on 5/30/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class HistoryExercisePresenter: HistoryExercisePresenterProtocol, HistoryExerciseInteractorOutputProtocol {

    weak private var view: HistoryExerciseViewProtocol?
    var interactor: HistoryExerciseInteractorInputProtocol?
    private let router: HistoryExerciseWireframeProtocol
    var calendarEntity: DateCalendarEntity?

    init(interface: HistoryExerciseViewProtocol, interactor: HistoryExerciseInteractorInputProtocol?, router: HistoryExerciseWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func gotoHistoryDate(date: String) {
        self.router.gotoHistoryDate(date: date)
    }
    
    func getResultCalendarSuccessed(respone: DateCalendarEntity) {
        self.calendarEntity = respone
        self.view?.reloadView()
    }
    
    func getDate() -> [Int]? {
        return calendarEntity?.date?.map{Date(gtFormat: $0, gfFormat: AppDateFormat.yyyyMMddHHmmss)?.day}.compactMap{$0}
    }
    
    func getResultCalendar(from: String, to: String) {
        self.interactor?.getResultCalendar(from: from, to: to)
    }

}
