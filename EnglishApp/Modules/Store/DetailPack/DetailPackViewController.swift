//
//  DetailPackViewController.swift
//  EnglishApp
//
//  Created Kai Pham on 6/1/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class DetailPackViewController: BaseViewController, DetailPackViewProtocol {

	var presenter: DetailPackPresenterProtocol?
    @IBOutlet weak var tbPack: UITableView!
    
    var listDetailPack = [DetailPackEntity]() {
        didSet {
            tbPack.reloadData()
        }
    }

	override func viewDidLoad() {
        super.viewDidLoad()
        configureTable()
        
        listDetailPack = DetailPackEntity.toArray()
    }

    override func setUpNavigation() {
        super.setUpNavigation()
        addBackToNavigation()
    }
}


extension DetailPackViewController: UITableViewDelegate, UITableViewDataSource {
    func configureTable() {
        tbPack.delegate = self
        tbPack.dataSource = self
        tbPack.registerXibFile(HeaderPackCell.self)
        tbPack.registerXibFile(DetailPackCell.self)
        tbPack.separatorStyle = .none
        
        tbPack.estimatedRowHeight = 55
        tbPack.rowHeight = UITableView.automaticDimension
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        if indexPath.item == 0 {
            let cell = tableView.dequeue(HeaderPackCell.self, for: indexPath)
            return cell
        } else {
            let cell = tableView.dequeue(DetailPackCell.self, for: indexPath)
            cell.item = self.listDetailPack[indexPath.item - 1]
            return cell
        }
        
        
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return listDetailPack.count + 1
    }
    
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return indexPath.item == 0 ? 250: 50
    }
}
