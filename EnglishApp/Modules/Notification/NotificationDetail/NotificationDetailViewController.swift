//
//  NotificationDetailViewController.swift
//  EnglishApp
//
//  Created Kai Pham on 6/2/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class NotificationDetailViewController: BaseViewController, NotificationDetailViewProtocol {

	var presenter: NotificationDetailPresenterProtocol?
    var notification: NotificationEntity?
    
    @IBOutlet weak var imgIcon: UIImageView!
    @IBOutlet weak var lbTitle: UILabel!
    @IBOutlet weak var lbContent: UILabel!
    @IBOutlet weak var lbTime: UILabel!
    
    var idNotification: Int = 0
    
    @IBOutlet weak var heightImage: NSLayoutConstraint!

	override func viewDidLoad() {
        super.viewDidLoad()
        displayUI(isAllowShow: false)
        if notification == nil {
            presenter?.getNotiDetail(id: idNotification)
        } else {
            showData()
        }
    }
    
    func displayUI(isAllowShow bool: Bool ) {
        imgIcon.isHidden = bool
        lbTime.isHidden = bool
        lbContent.isHidden = bool
        lbTitle.isHidden = bool
    }
    
    func showData() {
        guard let notification = notification else {
            return
        }
        lbContent.text = notification.content
        lbTime.text = notification.createTime?.toString(dateFormat: AppDateFormat.hhmmddmmyyy)
        lbTitle.text = notification.title
        
        if notification.url == nil {
            heightImage.constant = 0
        } else {
            heightImage.constant = 9 * self.view.frame.width/16
        }
    }
    
    func showData(notification: NotificationEntity) {
        lbContent.text = notification.content
        lbTime.text = notification.createTime?.toString(dateFormat: AppDateFormat.hhmmddmmyyy)
        lbTitle.text = notification.title
        
        if notification.url == nil {
            heightImage.constant = 0
        } else {
            heightImage.constant = 9 * self.view.frame.width/16
        }
        displayUI(isAllowShow: true)
    }

    override func setUpNavigation() {
        super.setUpNavigation()
        
        addBackToNavigation()
        setTitleNavigation(title: LocalizableKey.titleNotificationDetail.showLanguage)
    }
    override func setTitleUI() {
        super.setTitleUI()
    }
    
    func didSucccess(noti: NotificationEntity) {
        showData(notification: noti)
        displayUI(isAllowShow: true)
    }
}
