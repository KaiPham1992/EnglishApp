//
//  NotificationDetailPresenter.swift
//  EnglishApp
//
//  Created Kai Pham on 6/2/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class NotificationDetailPresenter: NotificationDetailPresenterProtocol, NotificationDetailInteractorOutputProtocol {

    weak private var view: NotificationDetailViewProtocol?
    var interactor: NotificationDetailInteractorInputProtocol?
    private let router: NotificationDetailWireframeProtocol

    init(interface: NotificationDetailViewProtocol, interactor: NotificationDetailInteractorInputProtocol?, router: NotificationDetailWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func getNotiDetail(id: Int) {
        ProgressView.shared.show()
        Provider.shared.notificationAPIService.getNotificationDetail(id: id, success: { (noti) in
            ProgressView.shared.hide()
            guard let noti = noti else { return }
//            self.view?.didSucccess(noti: noti)
        }) { (error) in
            ProgressView.shared.hide()
            print(error?.localizedDescription)
        }
    }
    
    func readNotification(id: Int) {
        Provider.shared.notificationAPIService.readNotification(notificationId: id, success: { _ in
            if UIApplication.shared.applicationIconBadgeNumber > 0 {
                UIApplication.shared.applicationIconBadgeNumber -= 1
            }
        }) { _ in
            
        }
    }

}
