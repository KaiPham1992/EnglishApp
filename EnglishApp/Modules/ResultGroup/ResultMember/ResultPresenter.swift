//
//  ResultPresenter.swift
//  EnglishApp
//
//  Created vinova on 5/23/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class ResultPresenter: ResultPresenterProtocol, ResultInteractorOutputProtocol {
    
    weak private var view: ResultViewProtocol?
    var interactor: ResultInteractorInputProtocol?
    private let router: ResultWireframeProtocol
    var testResultProfile: TestResultProfileEntity?

    init(interface: ResultViewProtocol, interactor: ResultInteractorInputProtocol?, router: ResultWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func gotoResultQuestion(listAswer: [QuestionResultEntity], index: Int) {
        self.router.gotoResultQuestion(listAswer: listAswer, index: index)
    }
    
    func getListAnswer() -> [QuestionResultEntity]?{
        return testResultProfile?.questions
    }
    
    func getImageProfile() -> String?{
        return testResultProfile?.img_src
    }
    
    func getAmountDiamond() -> String?{
        return testResultProfile?.amount_diamond ?? "0"
    }
    
    func getAmoutRank() -> String?{
        return testResultProfile?.amount_rank ?? "0"
    }
    
    func getTotalTime() -> String {
        let time = Int(testResultProfile?.total_time ?? "0") ?? 0
        let min = time/60
        let second = time % 60
        if second < 10 {
            return "\(min): 0\(second) \(LocalizableKey.min.showLanguage)"
        }
        return "\(min):\(second) \(LocalizableKey.min.showLanguage)"
    }
    
    func getNumberQuestion() -> Int?{
        return testResultProfile?.questions?.count
    }
    
    func getPointQuestion(indexPath: IndexPath) -> Int?{
        return Int(testResultProfile?.questions?[indexPath.row].score ?? "0")
    }
    
    func getTotalPoint() -> String {
        return (testResultProfile?.total_score?.formatNumber() ?? "") + " " + LocalizableKey.point.showLanguage
    }

    
    func getViewResult(id: String) {
        if testResultProfile == nil {
            self.interactor?.getViewResult(id: id)
        } else {
            self.view?.reloadView()
        }
        
    }
    
    func getViewTestResultSuccessed(respone: TestResultProfileEntity) {
        self.testResultProfile = respone
        self.view?.reloadView()
    }
}
