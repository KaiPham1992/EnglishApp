//
//  ResultViewController.swift
//  EnglishApp
//
//  Created vinova on 5/23/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import XLPagerTabStrip

class ResultViewController: BaseViewController, ResultViewProtocol {

    @IBOutlet weak var trailingStackView: NSLayoutConstraint!
    @IBOutlet weak var leadingStackView: NSLayoutConstraint!
    @IBOutlet weak var stackView: UIStackView!
    @IBOutlet weak var viewRank: ViewPoint!
    @IBOutlet weak var btnBackHome: UIButton!
    @IBOutlet weak var lblTimeDoExercise: UILabel!
    @IBOutlet weak var lblPointSum: UILabel!
    @IBOutlet weak var tbvResult: UITableView!
    @IBOutlet weak var viewTime: ViewPoint!
    var type : TypeResult = .result
    var presenter: ResultPresenterProtocol?

    override func setUpViews() {
        super.setUpViews()
        if type == .result {
            viewRank.isHidden = false
            leadingStackView.constant = 28
            trailingStackView.constant = 28
        } else {
            viewRank.isHidden = true
            leadingStackView.constant = 16
            trailingStackView.constant = 16
            
        }
        tbvResult.contentInset = UIEdgeInsets(top: 0, left: 0, bottom: 50, right: 0)
        tbvResult.registerXibFile(CellResult.self)
        tbvResult.dataSource = self
        tbvResult.delegate = self
        btnBackHome.setTitle(LocalizableKey.back_gome.showLanguage, for: .normal)
        lblPointSum.text = LocalizableKey.sum_point.showLanguage
        lblTimeDoExercise.text = LocalizableKey.time_do_exercise.showLanguage
    }
    
    override func setUpNavigation() {
        super.setUpNavigation()
        addBackToNavigation()
        if type == .result{
            setTitleNavigation(title: LocalizableKey.result.showLanguage)
        } else {
            setTitleNavigation(title: LocalizableKey.result_competion.showLanguage)
        }
        
    }
}
extension ResultViewController : UITableViewDataSource{
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 10
    }
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeue(CellResult.self, for: indexPath)
        if indexPath.row % 2 == 0{
            cell.setupData(isTrue: true)
        } else {
            cell.setupData(isTrue: false)
        }
        return cell
    }
}
extension ResultViewController : UITableViewDelegate{
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
    }
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 44
    }
}

extension ResultViewController: IndicatorInfoProvider{
    func indicatorInfo(for pagerTabStripController: PagerTabStripViewController) -> IndicatorInfo {
        return IndicatorInfo(title: LocalizableKey.result.showLanguage)
    }
}
