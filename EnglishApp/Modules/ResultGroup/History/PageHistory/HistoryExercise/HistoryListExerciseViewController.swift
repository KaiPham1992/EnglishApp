//
//  HistoryListExerciseViewController.swift
//  EnglishApp
//
//  Created Steve on 7/26/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class HistoryListExerciseViewController: ListManagerVC {

    var presenter: HistoryListExercisePresenterProtocol?
    var type: TypeDoExercise = .levelExercise
    var date: String = ""
    
    override func setUpViews() {
        customTitle = LocalizableKey.history_exercise.showLanguage
        showButtonBack = true
        super.setUpViews()
    }
    
    override func callAPI() {
        super.callAPI()
        self.presenter?.getListHistoryExercise(type: type.rawValue, offset: self.offset, date: self.date)
    }
    
    override func registerTableView() {
        super.registerTableView()
        tableView.registerXibFile(CellHistoryListExercise.self)
    }
    
    override func cellForRowListManager(item: Any, _ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let data = item as! TestResult
        let cell = tableView.dequeue(CellHistoryListExercise.self, for: indexPath)
        if type == .assignExercise || type == .createExercise {
            cell.showWidthButton()
        } else {
            cell.hideWidthButton()
        }
        cell.setupDatacell(dataCell: data)
        if type == .createExercise {
            cell.hideLevelLabel()
        }
        return cell
    }
    
    override func didSelectTableView(item: Any, indexPath: IndexPath) {
        let data = item as! TestResult
        self.presenter?.gotoResult(type: self.type, id: data._id ?? "0")
    }
}

extension HistoryListExerciseViewController : HistoryListExerciseViewProtocol{
    func reloadView() {
        initLoadData(data: self.presenter?.testsResultResponse?.results ?? [])
    }
}
