//
//  HistoryListExercisePresenter.swift
//  EnglishApp
//
//  Created Steve on 7/26/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class HistoryListExercisePresenter: HistoryListExercisePresenterProtocol, HistoryListExerciseInteractorOutputProtocol {

    weak private var view: HistoryListExerciseViewProtocol?
    var interactor: HistoryListExerciseInteractorInputProtocol?
    private let router: HistoryListExerciseWireframeProtocol
    var isLoadmore = true
    var testsResultResponse: TestsResultRespone?

    init(interface: HistoryListExerciseViewProtocol, interactor: HistoryListExerciseInteractorInputProtocol?, router: HistoryListExerciseWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func getListHistoryExercise(type: Int, offset: Int, date: String) {
        if isLoadmore {
            self.interactor?.getListHistoryExercise(type: type, offset: offset, date: date)
        }
    }
    
    func getListHistoryExerciseSuccessed(response: TestsResultRespone) {
        if response.results.count < limit {
            isLoadmore = false
        }
        if testsResultResponse == nil {
            self.testsResultResponse = response
        } else {
            self.testsResultResponse?.results += response.results
        }
        self.view?.reloadView()
    }
    
    func gotoResult(type: TypeDoExercise, id: String) {
        self.router.gotoResult(type: type, id: id)
    }

}
