//
//  HistoryExerciseProtocols.swift
//  EnglishApp
//
//  Created vinova on 5/30/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//MARK: Wireframe -
protocol HistoryExerciseWireframeProtocol: class {
    func gotoHistoryDate(date: String)
}
//MARK: Presenter -
protocol HistoryExercisePresenterProtocol: class {

    var interactor: HistoryExerciseInteractorInputProtocol? { get set }
    func gotoHistoryDate(date: String)
    func getResultCalendar(from: String,to: String)
    func getDate() -> [Int]?
}

//MARK: Interactor -
protocol HistoryExerciseInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func getResultCalendarSuccessed(respone: DateCalendarEntity)
}

protocol HistoryExerciseInteractorInputProtocol: class {

    var presenter: HistoryExerciseInteractorOutputProtocol?  { get set }
    func getResultCalendar(from: String,to: String)

    /* Presenter -> Interactor */
}

//MARK: View -
protocol HistoryExerciseViewProtocol: class {

    var presenter: HistoryExercisePresenterProtocol?  { get set }
    func reloadView()

    /* Presenter -> ViewController */
}
