//
//  ExplainExerciseProtocols.swift
//  EnglishApp
//
//  Created Steve on 7/28/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation
import UIKit

//MARK: Wireframe -
protocol ExplainExerciseWireframeProtocol: class {

}
//MARK: Presenter -
protocol ExplainExercisePresenterProtocol: class {

    var interactor: ExplainExerciseInteractorInputProtocol? { get set }
    var explainQuestion: ExplainQuestionResponse? {get set}
    func getExplainQuestion(id: Int)
    func searchVocabulary(word: String, position: CGPoint)
}

//MARK: Interactor -
protocol ExplainExerciseInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func getExlainQuestionSuccessed(respone: ExplainQuestionResponse)
    func searchVocabularySuccessed(wordEntity: WordExplainEntity, position: CGPoint)
}

protocol ExplainExerciseInteractorInputProtocol: class {

    var presenter: ExplainExerciseInteractorOutputProtocol?  { get set }
    func getExplainQuestion(id: Int)
    func searchVocabulary(word: String, position: CGPoint)

    /* Presenter -> Interactor */
}

//MARK: View -
protocol ExplainExerciseViewProtocol: class {

    var presenter: ExplainExercisePresenterProtocol?  { get set }
    func reloadView()
    func searchVocabularySuccessed(wordEntity: WordExplainEntity, position: CGPoint)

    /* Presenter -> ViewController */
}
