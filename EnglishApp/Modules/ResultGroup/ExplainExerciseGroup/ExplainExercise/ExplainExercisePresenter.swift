//
//  ExplainExercisePresenter.swift
//  EnglishApp
//
//  Created Steve on 7/28/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class ExplainExercisePresenter: ExplainExercisePresenterProtocol, ExplainExerciseInteractorOutputProtocol {

    weak private var view: ExplainExerciseViewProtocol?
    var interactor: ExplainExerciseInteractorInputProtocol?
    private let router: ExplainExerciseWireframeProtocol
    var explainQuestion: ExplainQuestionResponse?

    init(interface: ExplainExerciseViewProtocol, interactor: ExplainExerciseInteractorInputProtocol?, router: ExplainExerciseWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

    func getExplainQuestion(id: Int) {
        self.interactor?.getExplainQuestion(id: id)
    }
    
    func getExlainQuestionSuccessed(respone: ExplainQuestionResponse) {
        self.explainQuestion = respone
        self.view?.reloadView()
    }
    
    func searchVocabulary(word: String, position: CGPoint) {
        self.interactor?.searchVocabulary(word: word, position: position)
    }
    
    func searchVocabularySuccessed(wordEntity: WordExplainEntity, position: CGPoint) {
        self.view?.searchVocabularySuccessed(wordEntity: wordEntity, position: position)
    }
}
