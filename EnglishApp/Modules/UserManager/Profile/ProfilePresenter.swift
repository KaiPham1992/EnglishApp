//
//  ProfilePresenter.swift
//  EnglishApp
//
//  Created Kai Pham on 5/12/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class ProfilePresenter: ProfilePresenterProtocol, ProfileInteractorOutputProtocol {

    weak private var view: ProfileViewProtocol?
    var interactor: ProfileInteractorInputProtocol?
    private let router: ProfileWireframeProtocol

    var canLoadMore: Bool = false
    var lisPackage: [Inventories] = []
    
    init(interface: ProfileViewProtocol, interactor: ProfileInteractorInputProtocol?, router: ProfileWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func getProfile() {
        interactor?.getProfile()
    }
    
    func didGetProfile(user: UserEntity) {
        view?.didGetProfile(user: user)
    }
    
    func getPackage() {
        canLoadMore = false
        Provider.shared.userAPIService.getPackage(offset: lisPackage.count ,success: { (success) in
            guard let packages = success?.inventories else { return }
            self.lisPackage.append(contentsOf: packages)
            if packages.count == limit {
                self.canLoadMore = true
            }
            self.lisPackage.removeAll()
            self.view?.didGetPackage(package: self.lisPackage)
        }) { (error) in
            guard let error = error else { return }
            print(error.localizedDescription)
        }
    }

}
