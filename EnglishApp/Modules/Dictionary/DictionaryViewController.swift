//
//  DictionaryViewController.swift
//  EnglishApp
//
//  Created vinova on 5/15/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import DropDown

class DictionaryViewController: BaseViewController, DictionaryViewProtocol {

    @IBOutlet weak var viewDictionary: UIView!
    @IBOutlet weak var tfSearch: UITextField!
    
    var presenter: DictionaryPresenterProtocol?
    let dropDownDictionary = DropDown()
    let dropDownSearch = DropDown()

    override func setUpViews() {
        super.setUpViews()
        DispatchQueue.main.asyncAfter(deadline: .now()+0.2) {
            self.setupDropDown()
        }
        DispatchQueue.main.asyncAfter(deadline: .now()+1) {
            self.getData()
        }
    }

    override func setUpNavigation() {
        super.setUpNavigation()
        addBackToNavigation()
        setTitleNavigation(title: "Từ điển")
        addButtonToNavigation(image: UIImage(named: "ic_settings")!, style: .right, action: #selector(clickButtonRight) )
    }
    
    @objc func clickButtonRight(){
        
    }
    
    private func getData(){
        dropDownDictionary.dataSource = ["a","b","c"]
        dropDownDictionary.show()
//        dropDownSearch.dataSource = ["a","b","c"]
//        dropDownSearch.show()
    }
    
    func setupDropDown(){
        //dropdownDictionary
        dropDownDictionary.anchorView = self.viewDictionary
        dropDownDictionary.backgroundColor = UIColor(red: 32/255, green: 181/255, blue: 85/255, alpha: 1)
//        dropDownDictionary.backgroundColor = UIColor.white
        dropDownDictionary.width = self.viewDictionary.frame.width
        dropDownDictionary.bottomOffset = CGPoint(x: 0, y: (viewDictionary.frame.height))
        dropDownDictionary.setupCornerRadius(0)
        dropDownDictionary.customCellConfiguration = { (index: Index, item: String, cell: DropDownCell) -> Void in
            return
        }
        // Action triggered on selection
        dropDownDictionary.selectionAction = { [unowned self] (index: Int, item: String) in
            self.dropDownSearch.hide()
        }
        
        //dropdownSearch
        dropDownSearch.anchorView = self.tfSearch
        dropDownSearch.backgroundColor = UIColor.white
        dropDownSearch.width = self.tfSearch.frame.width
        dropDownSearch.bottomOffset = CGPoint(x: 0, y: (tfSearch.frame.height))
        dropDownSearch.setupCornerRadius(0)
        dropDownSearch.customCellConfiguration = { (index: Index, item: String, cell: DropDownCell) -> Void in
            return
        }
        // Action triggered on selection
        dropDownSearch.selectionAction = { [unowned self] (index: Int, item: String) in
            self.dropDownSearch.hide()
        }
    }
}
