//
//  FightProtocols.swift
//  EnglishApp
//
//  Created Steve on 8/10/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation
import UIKit

//MARK: Wireframe -
protocol FightWireframeProtocol: class {
    func gotoDetailVocabulary(word: WordExplainEntity)
    func gotoResult(result: TestResultProfileEntity,type: TypeDoExercise)
}
//MARK: Presenter -
protocol FightPresenterProtocol: class {

    var interactor: FightInteractorInputProtocol? { get set }
    
    var error: APIError? {get set}
    var exerciseEntity: ViewExerciseEntity? {get set}
    var listRank : [RankTeamEntity] {get set}
    
    func getViewFightCompetition(id: String)
    func gotoDetailVocabulary(word: WordExplainEntity)
    func exitExercise(id : Int)
    func suggestQuestion(id: String, indexPath: IndexPath, indexQuestion: IndexPath,isDiamond: Bool)
    func submitAnswer(param: SubmitCompetitionQuestionResponse)
    func searchVocabulary(word: String,position: CGPoint,index: IndexPath)
}

//MARK: Interactor -
protocol FightInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func getExerciseSuccessed(respone: ViewExerciseEntity)
    func gotoResult(result: TestResultProfileEntity)
    func getExerciseFailed(error:APIError)
    func exitSuccessed(respone: TestResultProfileEntity)
    func suggestQuestionSuccessed(respone: [String])
    func suggestQuestionError(error: APIError)
    func submitCompetitionSuccessed(listRank: [RankTeamEntity])
    func searchVocabularySuccessed(wordEntity: WordExplainEntity,position: CGPoint,index: IndexPath)
    func fightDone()
    func submitFailed(error: APIError)
}

protocol FightInteractorInputProtocol: class {

    var presenter: FightInteractorOutputProtocol?  { get set }
    
    func getViewFightCompetition(id: String)
    
    func exitExercise(id : Int)
    func suggestQuestion(id: String,isDiamond: Bool)
    func submitAnswer(param: SubmitCompetitionQuestionResponse)
    func searchVocabulary(word: String,position: CGPoint,index: IndexPath)
    
    /* Presenter -> Interactor */
}

//MARK: View -
protocol FightViewProtocol: class {

    var presenter: FightPresenterProtocol?  { get set }
    
    func reloadView()
    func getExerciseFailed(error: APIError)
    func exitSuccessed()
    func suggesQuestionSuccessed(indexPath: IndexPath, indexQuestion: IndexPath)
    func suggestQuestionError()
    func submitCompetitionSuccessed()
    func searchVocabularySuccessed(wordEntity: WordExplainEntity,position: CGPoint,index: IndexPath)
    func fightDone()
    func submitFailed()
    /* Presenter -> ViewController */
}
