//
//  DetailTeamViewController.swift
//  EnglishApp
//
//  Created Kai Pham on 5/16/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class DetailTeamViewController: BaseViewController {

    @IBOutlet weak var lblMember: UILabel!
    var presenter: DetailTeamPresenterProtocol?
    @IBOutlet weak var tbTeam: UITableView!
    @IBOutlet weak var btnStart: UIButton!
    @IBOutlet weak var btnExplain: UIButton!
    @IBOutlet weak var btnLeave: UIButton!
    var id: String = "0"
    var actionLeaveTeam : (()->())?
    var actionBackView: (() -> ())?

	override func viewDidLoad() {
        super.viewDidLoad()
        configureTable()
        self.presenter?.getDetailTeam(id: self.id)
    }

    override func setTitleUI() {
        super.setTitleUI()
        addBackToNavigation()
        btnStart.setTitle("\(LocalizableKey.startAfter.showLanguage.uppercased())", for: .normal)
        btnExplain.setTitle(LocalizableKey.explainConpetition.showLanguage.uppercased(), for: .normal)
        btnLeave.setTitle(LocalizableKey.leaveTeam.showLanguage.uppercased(), for: .normal)
    }
    
    @IBAction func btnStartTapped() {
        //test competition
        let vc = FightRouter.createModule(exercise_id: self.presenter?.teamDetail?.team_info?.competition_id ?? "")
        self.push(controller: vc)
    }
    
    @IBAction func btnExplainTapped() {
        self.push(controller: ExplainCompetitionRouter.createModule(idCompetition: self.presenter?.getTeamInfo()?.competition_id ?? "0"))
    }
    
    @IBAction func btnLeaveTapped() {
        PopUpHelper.shared.showLeaveGroup(completionNo: {
            
        }) {
            self.presenter?.leaveTeam(id: self.id)
        }
    }
    override func btnBackTapped() {
        actionBackView?()
        super.btnBackTapped()
    }
}

extension DetailTeamViewController : DetailTeamViewProtocol {
    func reloadView() {
        if let teamInfor = self.presenter?.getTeamInfo() {
            setTitleNavigation(title: teamInfor.name&)
            self.id = teamInfor.id ?? "0"
            lblMember.text = teamInfor.toPercentMember()
        }
        tbTeam.reloadData()
    }
    
    func leaveTeamSuccessed() {
        actionLeaveTeam?()
        self.pop(animated: true)
    }
}

extension DetailTeamViewController: UITableViewDelegate, UITableViewDataSource {
    func configureTable() {
        tbTeam.delegate = self
        tbTeam.dataSource = self
        tbTeam.registerXibFile(DetailTeamCell.self)
        tbTeam.separatorStyle = .none
        
        tbTeam.estimatedRowHeight = 55
        tbTeam.rowHeight = UITableView.automaticDimension
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeue(DetailTeamCell.self, for: indexPath)
        cell.lbIndex.text = "\(indexPath.item + 1)"
        if let dataCell = self.presenter?.getUserIndexPath(indexPath: indexPath) {
            cell.member = dataCell
        }
        return cell
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        let row = self.presenter?.getNumberRow() ?? 0
        if row == 0 {
            showNoData()
        } else {
            hideNoData()
        }
        return row
    }
    
    @objc func btnJoinTapped() {
        
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 80
    }
}
