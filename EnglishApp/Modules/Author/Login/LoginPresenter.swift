//
//  LoginPresenter.swift
//  EnglishApp
//
//  Created Kai Pham on 5/9/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class LoginPresenter: LoginPresenterProtocol {

    weak private var view: LoginViewProtocol?
    var interactor: LoginInteractorInputProtocol?
    private let router: LoginWireframeProtocol

    init(interface: LoginViewProtocol, interactor: LoginInteractorInputProtocol?, router: LoginWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func login(email: String, password: String) {
        interactor?.login(email: email, password: password)
    }
    
    func loginSocial(param: LoginSocialParam) {
        interactor?.loginSocial(param: param)
    }

}


extension LoginPresenter: LoginInteractorOutputProtocol {
    func didLogin(user: UserEntity?) {
        
        // -- Update avatar for the first time log in
        if user?.attachImg == nil, user?.socialImage != nil {
            if user?.socialImage != nil {
                // -- For social network account
                guard let socialImageUrl = user?.socialImage else { return }
                let url = URL(string: socialImageUrl)
                let data = try? Data(contentsOf: url!)
                guard let socialImage = UIImage(data: data!) else { return  }
                interactor?.updateAvatar(image: socialImage)
            }
        }
        
        view?.didLogin(user: user)
    }
    
    func didLogin(error: APIError?) {
        view?.didError(error: error)
    }
}
