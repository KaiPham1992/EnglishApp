//
//  FindPresenter.swift
//  EnglishApp
//
//  Created Kai Pham on 6/8/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class FindPresenter: FindPresenterProtocol, FindInteractorOutputProtocol {
    
 
    weak private var view: FindViewProtocol?
    var interactor: FindInteractorInputProtocol?
    private let router: FindWireframeProtocol
    var searchTheoryRespone: [SearchEntity] = []
    var searchExciseRespone: [TestResultProfileEntity] = []

    init(interface: FindViewProtocol, interactor: FindInteractorInputProtocol?, router: FindWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func searchTheorySuccessed(respone: [SearchEntity]) {
        self.searchTheoryRespone = respone
        self.view?.reloadView()
    }
    
    func searchExerciseSuccessed(respone: [TestResultProfileEntity]) {
        self.searchExciseRespone = respone
        self.view?.reloadView()
    }
    
    func searchExercise(text: String) {
        self.interactor?.searchExercise(text: text)
    }
    
    func searchTheory(text: String){
        self.interactor?.searchTheory(text: text)
    }
    
    func gotoTheoryDetail(idLesson: String){
        self.router.gotoTheoryDetail(idLesson: idLesson)
    }
    
    func checkAmountSearchExercise() {
        self.interactor?.checkAmountSearchExercise()
    }
    
    func checkAmountSearchExerciseSuccessed() {
        self.view?.checkAmountSearchExerciseSuccessed()
    }
}
