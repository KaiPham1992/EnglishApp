//
//  FindProtocols.swift
//  EnglishApp
//
//  Created Kai Pham on 6/8/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//MARK: Wireframe -
protocol FindWireframeProtocol: class {
    func gotoTheoryDetail(idLesson: String)
}
//MARK: Presenter -
protocol FindPresenterProtocol: class {

    var interactor: FindInteractorInputProtocol? { get set }
    var searchTheoryRespone : [SearchEntity] {get}
    var searchExciseRespone : [TestResultProfileEntity] {get}
    func searchExercise(text: String)
    func searchTheory(text: String)
    func gotoTheoryDetail(idLesson: String)
}

//MARK: Interactor -
protocol FindInteractorOutputProtocol: class {

    /* Interactor -> Presenter */
    func searchTheorySuccessed(respone: [SearchEntity])
    func searchExerciseSuccessed(respone: [TestResultProfileEntity])
}

protocol FindInteractorInputProtocol: class {

    var presenter: FindInteractorOutputProtocol?  { get set }
    func searchExercise(text: String)
    func searchTheory(text: String)

    /* Presenter -> Interactor */
}

//MARK: View -
protocol FindViewProtocol: class {

    var presenter: FindPresenterProtocol?  { get set }
    func reloadView()

    /* Presenter -> ViewController */
}
