//
//  FindDetailExercisePresenter.swift
//  EnglishApp
//
//  Created Steve on 12/7/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class FindDetailExercisePresenter: FindDetailExercisePresenterProtocol, FindDetailExerciseInteractorOutputProtocol {

    weak private var view: FindDetailExerciseViewProtocol?
    var interactor: FindDetailExerciseInteractorInputProtocol?
    private let router: FindDetailExerciseWireframeProtocol

    init(interface: FindDetailExerciseViewProtocol, interactor: FindDetailExerciseInteractorInputProtocol?, router: FindDetailExerciseWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func reportQuestion(questionDetailId: Int, content: String) {
        self.interactor?.reportQuestion(questionDetailId: questionDetailId, content: content)
    }
    
    func reportQuestionSuccessed() {
        self.view?.reportQuestionSuccessed()
    }
    
    func searchVocabulary(word: String, position: CGPoint) {
        self.interactor?.searchVocabulary(word: word, position: position)
    }
    
    func searchVocabularySuccessed(wordEntity: WordExplainEntity, position: CGPoint) {
        self.view?.searchVocabularySuccessed(wordEntity: wordEntity, position: position)
    }
    
    func gotoDetailVocabulary(idWord: Int) {
        self.router.gotoDetailVocabulary(idWord: idWord)
    }
    
    func checkAmountSearchExercise(callback: @escaping (_ isSuccessed: Bool) -> ()) {
        self.interactor?.checkAmountSearchExercise(callback: callback)
    }

}
